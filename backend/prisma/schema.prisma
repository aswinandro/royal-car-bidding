generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  bids     Bid[]
  auctions Auction[] @relation("AuctionOwner")
  wonAuctions Auction[] @relation("AuctionWinner")
}

model Car {
  id          String   @id @default(uuid())
  make        String
  model       String
  year        Int
  description String
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  auctions Auction[]
}

model Auction {
  id            String    @id @default(uuid())
  carId         String
  ownerId       String
  startTime     DateTime
  endTime       DateTime
  startingBid   Float
  currentBid    Float?
  winnerId      String?
  status        String    @default("PENDING") // PENDING, ACTIVE, ENDED
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  car           Car       @relation(fields: [carId], references: [id])
  owner         User      @relation("AuctionOwner", fields: [ownerId], references: [id])
  winner        User?     @relation("AuctionWinner", fields: [winnerId], references: [id])
  bids          Bid[]
}

model Bid {
  id        String   @id @default(uuid())
  userId    String
  auctionId String
  amount    Float
  createdAt DateTime @default(now())

  // Relations
  user      User     @relation(fields: [userId], references: [id])
  auction   Auction  @relation(fields: [auctionId], references: [id])
}
