generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  bids      Bid[]
  wonAuctions Auction[] @relation("WinnerRelation")
  
  @@map("users")
}

model Car {
  id          String  @id @default(cuid())
  make        String
  model       String
  year        Int
  vin         String  @unique
  description String?
  imageUrls   String[]
  
  auctions    Auction[]
  
  @@map("cars")
}

model Auction {
  id              String      @id @default(cuid())
  carId           String
  startTime       DateTime
  endTime         DateTime
  startingBid     Decimal     @db.Decimal(10, 2)
  currentBid      Decimal     @db.Decimal(10, 2)
  winnerId        String?
  status          AuctionStatus @default(PENDING)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  version         Int         @default(0) // For optimistic locking
  
  car             Car         @relation(fields: [carId], references: [id])
  winner          User?       @relation("WinnerRelation", fields: [winnerId], references: [id])
  bids            Bid[]
  
  @@map("auctions")
  @@index([status, startTime])
  @@index([endTime])
}

model Bid {
  id        String   @id @default(cuid())
  userId    String
  auctionId String
  amount    Decimal  @db.Decimal(10, 2)
  timestamp DateTime @default(now())
  
  user      User     @relation(fields: [userId], references: [id])
  auction   Auction  @relation(fields: [auctionId], references: [id])
  
  @@map("bids")
  @@index([auctionId, timestamp])
  @@index([userId])
}

enum AuctionStatus {
  PENDING
  ACTIVE
  ENDED
  CANCELLED
}