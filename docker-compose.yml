version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: car-auction-postgres
    environment:
      POSTGRES_DB: car_auction
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - car-auction-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: car-auction-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - car-auction-network

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: car-auction-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - car-auction-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: car-auction-backend
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/car_auction
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_URL: amqp://rabbitmq:5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      PORT: 3001
      NODE_ENV: production
      FRONTEND_URL: http://localhost:3000
      THROTTLE_TTL: 60
      THROTTLE_LIMIT: 10
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - car-auction-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: car-auction-frontend
    environment:
      VITE_API_URL: http://localhost:3001
      VITE_WS_URL: http://localhost:3001
      VITE_APP_NAME: Car Auction System
      VITE_APP_VERSION: 1.0.0
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - car-auction-network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  car-auction-network:
    driver: bridge
